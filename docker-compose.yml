services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=carthographie@outlook.fr"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # dashboard
      # - "8000:8000" # optionnel, à retirer si non utilisé
    networks:
      - netcartho
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`traefik.carthographie.fr`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"

      # Redirection carthographie.fr -> www.carthographie.fr
      - "traefik.http.routers.redirect-root.rule=Host(`carthographie.fr`)"
      - "traefik.http.routers.redirect-root.entrypoints=websecure"
      - "traefik.http.routers.redirect-root.tls.certresolver=letsencrypt"
      - "traefik.http.routers.redirect-root.middlewares=redirect-www"
      # >>> Définition du middleware manquante AVANT : on la réactive <<<
      - "traefik.http.middlewares.redirect-www.redirectregex.regex=^https://carthographie\\.fr(.*)"
      - "traefik.http.middlewares.redirect-www.redirectregex.replacement=https://www.carthographie.fr$${1}"
      - "traefik.http.middlewares.redirect-www.redirectregex.permanent=true"

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: ${DOCKER_MYSQL_DATABASE}
      MYSQL_USER: ${DOCKER_MYSQL_USER}
      MYSQL_PASSWORD: ${DOCKER_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DOCKER_MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - netcartho
    # Optionnel si pas d’accès depuis l’hôte :
    # ports:
    #   - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-p${DOCKER_MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 30

  web:
    image: carthographie/lyrics-slide-show:latest
    restart: always
    command: >
      sh -c "scripts/wait_for_db.sh &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn lyrics_slide_show.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./staticfiles:/app/staticfiles
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - netcartho
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`www.carthographie.fr`) && PathPrefix(`/`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      - "traefik.http.routers.django.middlewares=add-slash"
      - "traefik.http.middlewares.add-slash.redirectregex.regex=^([^\\.]*)[^/]$"
      - "traefik.http.middlewares.add-slash.redirectregex.replacement=$${1}/"
      - "traefik.http.middlewares.add-slash.redirectregex.permanent=true"

  nginx:
    image: nginx:alpine
    container_name: nginx-static
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/static:ro
      - ./letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web
    networks:
      - netcartho
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=Host(`www.carthographie.fr`) && PathPrefix(`/static`)"
      - "traefik.http.routers.static.entrypoints=websecure"
      - "traefik.http.routers.static.tls.certresolver=letsencrypt"
      - "traefik.http.services.static.loadbalancer.server.port=80"

  api:
    image: carthographie/api-carthographie:latest
    restart: always
    env_file:
      - .env
    volumes:
      - ./n8n_files/contrat:/files
    networks:
      - netcartho
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.carthographie.fr`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  n8n:
    image: n8nio/n8n:1.91.2
    restart: always
    environment:
      - N8N_HOST=n8n.carthographie.fr
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.carthographie.fr/
      - WEBHOOK_TUNNEL_URL=host.docker.internal:5678
      - GENERIC_TIMEZONE=Europe/Berlin
      - N8N_SECURE_COOKIE=false
      - N8N_RUNNERS_ENABLED=true
    volumes:
      - ./n8n_data:/home/node/.n8n
      - ./n8n_files:/files
    networks:
      - netcartho
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`n8n.carthographie.fr`)
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=letsencrypt
      - traefik.http.services.n8n.loadbalancer.server.port=5678

networks:
  netcartho:
    external: true

volumes:
  letsencrypt:
  mysql_data: {}